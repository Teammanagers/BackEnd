name: CI/CD

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  CI:
    environment: team-managers
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 환경 변수 파일 생성
        run: |
          touch .env
          echo "${{ secrets.ENV_VARS }}" >> .env

      - name: 빌드 권한 설정
        run: chmod +x gradlew

      - name: 빌드
        run: ./gradlew clean build -x test

      - name: 도커 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 도커 이미지 생성 및 오리진에 푸시
        env:
          USER: ${{ secrets.DOCKER_USERNAME }}
          APP: ${{ secrets.DOCKER_APP_NAME }}
        run: |
          docker build -t $USER/$APP -f ./Dockerfile .
          docker push $USER/$APP:latest
  CD:
    runs-on: ubuntu-latest
    needs: CI
    steps:
      - name: 배포
        uses: appleboy/ssh-action@master
        env:
          USER: ${{ secrets.DOCKER_USERNAME }}
          APP: ${{ secrets.DOCKER_APP_NAME }}
        with:
          host: ${{ secrets.HOST }} # EC2 인스턴스 퍼블릭 DNS
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }} # pem 키
          envs: USER, APP
          # 도커 작업
          script: |
            sudo docker pull $USER/$APP:latest
            sudo docker stop $APP
            sudo docker rm $APP
            sudo docker run -e TZ=Asia/Seoul -d --name $APP -p 8080:8080 $USER/$APP:latest
            sudo docker container prune -f